--@class KeybindControllerMin
function Keybind(a)local self={}self.Key=a;local b={}function self.Add(c,d)if type(c)~="function"then error("[Keybind] Unable to add callback - not a function")end;table.insert(b,{Function=c,Name=d})end;function self.Remove(c)if type(c)~="function"then error("[Keybind] Unable to remove callback - not a function")end;local e={}for f,g in pairs(b)do e[g.Function]=f end;for f,g in pairs(e)do if f==c then b[g]=nil end end end;function self.GetNames()local h={}for f,g in pairs(b)do if g.Name then table.insert(h,g.Name)end end;return h end;function self.Call()for f,g in pairs(b)do g.Function(self.Key)end end;return self end;function KeybindController()local self={}local i={"forward","backward","left","right","yawleft","yawright","up","down","gear","light","landing","brake","option1","option2","option3","option4","option5","option6","option7","option8","option9","stopengines","speedup","speeddown","antigravity","booster","lshift","lalt","lalt","strafeleft","straferight"}self.keyUp={}self.keyDown={}self.keyLoop={}function self.Call(j,type)if type=="up"then if self.keyUp[j]then self.keyUp[j].Call(j)end elseif type=="down"then if self.keyDown[j]then self.keyDown[j].Call(j)end else if self.keyLoop[j]then self.keyDown[j].Call(j)end;system.print(j)end end;function self.GetNamedKeybinds()local h={}for f,g in pairs(self.keyUp)do local k=g.GetNames()if#k>0 then for l=1,#k do table.insert(h,{Key=g.Key,Name=k[l]})end end end;for f,g in pairs(self.keyDown)do local k=g.GetNames()if#k>0 then for l=1,#k do table.insert(h,{Key=g.Key,Name=k[l]})end end end;for f,g in pairs(self.keyLoop)do local k=g.GetNames()if#k>0 then for l=1,#k do table.insert(h,{Key=g.Key,Name=k[l]})end end end;table.sort(h,function(m,n)return m.Key<n.Key end)return h end;self.Init=function()end;local function o()for l=1,#i do self.keyUp[i[l]]=Keybind(i[l])self.keyDown[i[l]]=Keybind(i[l])self.keyLoop[i[l]]=Keybind(i[l])end end;o()return self end;keybindPresets={}